31.05.23 Made UML database diagram in Dia.

01.06.23
Briefly compiled the technical task.
Create database:
	CREATE DATABASE brief_news
	CHARACTER SET utf8
	COLLATE utf8_general_ci;
Create database user:
	CREATE USER 'brief_news_user'@'localhost' IDENTIFIED BY 'standart';
	the password is hidden because the development log will be on GitHub.
Grant privileges to database user:
	GRANT ALL PRIVILEGES ON brief_news.* TO 'brief_news_user'@'localhost';
Installed Laravel application:
	composer create-project --prefer-dist laravel/laravel briefNews
Initialized git repository:
	git init, git add ., git commit
further work with Git will not be described, look at the commits

02.06.23
Added new requirements to the technical task.
In the UML database diagram in Article table added the "status" field.
Added Laravel/UI package to the application:
	composer require laravel/ui
Running the package:
	php artisan ui:auth
Deleted in view resources\views\layouts\app.blade.php line:
	@vite(['resources/sass/app.scss', 'resources/js/app.js'])
To edit database tables add the doctrine/dbal package to the application:
	composer require doctrine/dbal

05.06.23
In the UML database diagram in Article table deleted the "status" field. It
repeats the functionality of "soft delete".
The preselected third normal form (3nf) of database.

06.06.23
The database structure conditionally corresponds to 3nf. Rows may be repeated
in the "sources_links" table because different articles may have the same sources.
To resolve the inconsistency, you must declare the "link" field unique and make a
many-to-many relationship in the "articles" and "sources_links" tables. But in my
humble opinion, it's overhead.
In UML DB make some changes for "soft delete".
Created Migrations for tables "articles" and "sources_links":
	php artisan make:migration create_articles_table
	php artisan make:migration create_sources_links_table
Added to migration "users" field: softDeletes (look in code).
Added to migration "articles" fields: user_id, header, body, policy, economy, science,
	technologies, sport, other, world, local, softDeletes.
Added to migration "sources_links" fields: article_id, link, softDeletes.
In file .env added DB settings: DB_DATABASE, DB_USERNAME, DB_PASSWORD.
Applying migrations:
	php artisan migrate
Dumped DB in MYSQL:
	mysqldump -uroot -p brief_news > brief_news.sql

07.06.23
Make models for a tables articles and sources_links:
	php artisan make:model Article
	php artisan make:model SourceLink
Because the model 'SourceLink' doesn't follow the naming rules, added a property
explicitly specifying the DB table.
Defined the fields available for mass assignment in models Article and SourceLink.
Added one-to-many relationship methods between models User and Article.
Added one-to-many relationship methods between models Article and SourceLink.

08.06.23
Found a mistake: migration of the user table does not match the design UML table.
In UML DB in the 'user' table changed the type column 'role' and 'status'.
Added to migration "users" field: surname, nickname, role, status.
Rollbacking all migrations:
	php artisan migrate:rollback
Applying migrations:
	php artisan migrate
Dumped DB in MYSQL:
	mysqldump -uroot -p brief_news > brief_news.sql

09.06.23
Added the fields available for mass assignment in model User: surname, nickname, role, status.
Adding the root user in DB:
Сreate a "seed":
	php artisan make:seeder UserRootSeeder
Adding to the "seed" the code that creates the user in the database.
Apply 'seed':
	php artisan db:seed --class=UserRootSeeder
Checking the interaction of models with database tables:
Сreate a "seed":
	php artisan make:seeder UserArticleLinkSeeder
Adding to the "seed" the code that creates the writer, article, and link,
and saves it in the database.
Apply 'seed':
	php artisan db:seed --class=UserArticleLinkSeeder
Dumped DB in MYSQL:
	mysqldump -uroot -p brief_news > brief_news.sql

10.06.23
Сhanged the method of generating words for the article in UserArticleLinkSeeder.
Recreated the database.
Dumped DB in MYSQL.

12.06.23 Working with the technical task.

13.06.23 Working with the technical task.

14.06.23 Finished the technical task (at least at this stage of development).
An error was found in the database structure. Combinations of rubrics in the articles table and users table will be repeated. Need to add rubrics_combinations table.

15.06.23
To fix an error in database structure:
Created Migrations for table "rubrics_combinations":
	php artisan make:migration create_rubrics_combinations_table
Changed migrations according to the UML diagram.
Make model for a table rubrics_combinations:
	php artisan make:model RubricsCombination
Changed Models according to the UML diagram.
Сreate a RubricsCombination "seed":
	php artisan make:seeder RubricsCombinationSeeder

16.06.23
Made the logic of filling the table in RubricsCombinationSeeder.
Recreated the database.
Dumped DB in MYSQL.

19.06.23
Сreate basic.blade.php in layouts.
Сreate home.blade.php in views.
planned the structure of controllers.

21.06.23
In view created user interface buttons.
Selected test password 1077 for all users.
Created user with admin role (seed).
Created user with reader role (web interface).
Tested user interface buttons on all roles (manual testing).

26.06.23
Work on the rubrics sorting panel:
Sketched View;
Skethed Controller.

27.06.23
Continuation of work on the rubrics sorting panel:
Continuation of work on the Controller.

28.06.23
Continuation of work on the rubrics sorting panel:
Continuation of work on the Controller;
The development of the logic for pressing the buttons "Panel for sorting articles by headings and locale" has been completed.

29.06.23
Continuation of work on the rubrics sorting panel:
Made a 'rubrics combination' in the Сontroller.
Moved the logic for "Panel for sorting articles by headings and locale" to a trait ConverterRubricsCombination.
Made buttons for "Panel for sorting articles by headings and locale" in View.

30.06.23
Began making the "news" section in the controller.

03.07.23
Make "Eager Loading By Default" in the Article model.

04.07.23
Made the "news" section in the Home view.
Continue to make the "news" section in the Home controller.

05.07.23
Started making controller logic for building a query to the database for fetching articles.

06.07.23
Continued making controller logic for building a query to the database for fetching articles.

07.07.23
Сompleted controller logic for building a query to the database for fetching articles.
Some Controller code refactoring.

10.07.23
In view hid the body of the article with a tag <details>, later will be finalized according to the requirements of the technical task.
Pagination:
Retrieving pagination views so they can be modified:
	php artisan vendor:publish --tag=laravel-pagination
Change arrow size <Previous Next> in file resources/views/vendor/pagination/tailwind.blade.php
A problem was detected: the standard paginator didn't work with the "Panel for sorting articles by headings and locale".

11.07.23
Finding a solution to a problem discovered earlier.
Found a solution:
	https://laravel.com/docs/10.x/pagination#appending-query-string-values
Summary: added paginator to Home view and Home controller

12.07.23
Article CRUD:
Create a resource controller that will implement CRUD logic for articles:
	php artisan make:controller ArticleController --resource
Created a route for resource Controller:
	Route::resource('articles', ArticleController::class)
Written logic in index method in ArticleController for a display of the 'My Articles' page.
For 'My Articles' view reused the 'Home' view, so made some changes in the view.

13.07.23
Fixed a bug in trait ConverterRubricsCombination:
when authenticating a user (and loading a rubrics combination), the 'all' button was always enabled.

14.07.23
Create article:
In ArticleController added logic in the 'create' method to show a create article page.
Make create.blade.php view. Because there will be an indefinite number of "sources links", it is necessary to apply on the page JavaScript to form 'inputs'
Working with JavaScript.

17.07.23
Working with JavaScript.
In create.blade.php view maked form with rubrics combinations.

18.07.23
Made the some logic in the store method.
Made a validation for input data.

19.07.23
Сhanged the logic of the IdRubricsCombination.php trait for the tasks of the store method.

20.07.23
Final сhanges of create.blade.php, store method and IdRubricsCombination trait.
Create article is done.

21.07.23
Edit article:
Added "edit" button on a Home Page.
Create edit.blade.php.
In ArticleController in edit() method added logic to show edit article page.
In ArticleController in update() method added logic to save edited article in DB.

Due to poor knowledge of JavaScript, making a CRUD for links in the view was impossible.
Also, the functionality of the resource controller is insufficient.
It will be necessary to make changes to the written part of the project.

24.07.23
Converting the Article resource route to regular routes and changing the name index to myArticles in controller and route.
Added Soft Delete in SourceLink model.
Added removal of links when editing an article: view, controller.

25.07.23
Delete article:
According to technical tasks, only an admin can delete an article. Created middleware:
	php artisan make:middleware IsAdmin
Register custom middleware in the app/Http/Kernel.php file.
In ArticleController in construct apply middleware IsAdmin only to destroyConfirm and destroy method.
Added logic to middleware IsAdmin.
Added Soft Delete in User and Article models.
Added Route destroyConfirm and destroy.
In ArticleController added methods destroyConfirm and destroy.
Added logic in methods.

26.07.23
Fix the wrong redirect in IsAdmin on denial.
Dump DB in the archive.
Added a cancel button on the Create and Edit pages.

Restore article:
Make changes to technical tasks: deleted articles were viewed on the Deleted Articles page.

27.07.23
Home Page, My Articles, and Deleted Articles use the same view home.blade.php.
Rename home.blade.php in showArticles.blade.php and adapt the page code for use in different cases.
Moved the Rubrics And Locale Panel to the included template rubricsAndLocalePanel.blade.php for readability of the page code.
In showArticles.blade.php added Restore article button.
In ArticleController added trashedArticles and restoreArticle methods and added logic to them.
In Route added trashedArticles and restore routes.

28.07.23
To edit the article could only the author or admin, create a policy:
	php artisan make:policy ArticlePolicy
Do the model to policy mappings in AuthServiceProvider.php.
Added logic in ArticlePolicy.
Added check with ArticlePolicy in ArticleController in construct for edit and update methods.
Added check with ArticlePolicy in ArticleController in construct for my, create, and store methods.

31.07.23
Added change to technical task:
In Admin Page moved the "Deleted Articles" button from the rubrics panel to the header;

User functionality:
Created a UserController:
	php artisan make:controller UserController
Added in construct middleware('auth').
My Profile Page:
Created Route users.myProfile.
In UserController created method myProfile.
In Views created directory users.
Created View myProfile.blade.php.

01.08.23
In UserController in method myProfile changed logic.
In View myProfile.blade.php created User customization panel of rubrics and locale.

02.08.23
Created Route users.update to save changes in a user profile.
In UserController created method update.
In UserController added validation rules and messages.
Added validation to the User customization panel of rubrics and locale in UserController in the update method.
Added validation: email, name, surname, nickname.
In UserController in method update added logic 'save edited user'.

Update user password:
Added routes: users.editPassword, users.updatePassword.
In UserController created methods: editPassword, updatePassword.
Create view editPassword.blade.php.

03.08.23
Added some changes to technical task.

04.08.23
Editing users by the administrator:

Show all profiles:
Create route allProfiles.
Create view allProfile.blade.php.
In UserController create allProfiles method.
Added logic to method.
Added code in the view.

Edit profile:
Create route editUserProfile.
Create view editUserProfile.blade.php.

08.08.23
In UserController created the editUserProfile method and added logic into it.
Added functionality into view editUserProfile.blade.php.
Create route updateUserProfile.
In UserController created the updateUserProfile method and added validation into it.

09.08.23
Added functionality into view editUserProfile.blade.php.
Finished updateUserProfile method logic.

10.08.23
Deleted 'debugging' from the ArticleController and Views.
Changes made to the technical task:
'user panel' for the administrator will be like 'articles': All profiles, Create profile, My profile, Deleted profiles.

Delete User:
Added Route users.destroyConfirm.
In UserController created a method destroyConfirm and add logic to it.
Added delete link into allProfiles.blade.php.
Added Route users.destroy.
In UserController created a method destroy and add logic to it.

Found a bug: have no default rubrics_combination_id value when creating a new user.
Corrected: 'Registers Users' page, for now, has no rubrics panel.
Found a bug: an error occurs on the "All Articles" page when trying to read a deleted author of an article.

11.08.23
Fixed bug: an error occurs on the "All Articles" page when trying to read a deleted author of an article.

Create User:
Added Route users.createUserProfile.
In UserController created a method createUserProfile and add logic to it.
Added Create User link into basic.blade.php.
Create view createUserProfile.blade.php.
Added Route users.storeUserProfile.
In UserController created a method storeUserProfile and add logic to it.
Do manual test, all work))

Restore User:
Added Route users.trashedUsersProfiles.
In UserController created a method trashedUsersProfiles and add logic to it.
Edited view allUsersProfiles.blade.php into showUsersProfiles to show deleted and active users.
Added Route users.restoreUserProfile.
In UserController created a method restoreUserProfile and add logic to it.

15.08.23
root profile can edit only root:

I tried to solve this problem by creating custom middleware EditingRoot.
Didn't work out. Because it is impossible to pass the model to the middleware before the method of Controller is called, it is impossible to provide the required level of protection to the root profile.

Here is the code of middleware:
	public function handle(Request $request, Closure $next): Response
    {
        if (
            $request->user() != NULL and
            (
                $request->role != 'root'
                or
                $request->role == 'root' and
                $request->user()->role == 'root'
            )
        ) {
            return $next($request);
        }
        else{
            return redirect()->route('home');
        }  
    }

Need middleware to change into a policy.

17.08.23
Created a UserPolicy.
Registering the policy in AuthServiceProvider.
Added logic to policy.
In the controller, the policy applied to the required methods.

18.08.23
Added small changes in route naming.
In ArticlePolicy added: banned writer can't create and edit the articles.

Fixed a bug: new user don't create. Added default value 256 to 'rubrics_combination_id' in table user.

THE BACKEND IS OVER!!!

21.08.23
Front.
Create file with style public/styles/main.css.
Connected the CSS file in the basic.blade.php.
Added background color for web application.
Pages login and register now inherited from bacic.blade.php.
Deleted source styles on these pages.